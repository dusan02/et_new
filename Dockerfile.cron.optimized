# Optimized Cron Worker Dockerfile
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy package files
COPY package.json package-lock.json* ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Generate Prisma client
RUN npx prisma generate

# Production image for cron worker
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy only necessary files for cron worker
COPY --from=deps /app/node_modules ./node_modules
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/src ./src

# Use production Prisma schema
RUN cp prisma/schema.prod.prisma prisma/schema.prisma

# Remove unnecessary files to reduce image size
RUN rm -rf /app/node_modules/.cache
RUN rm -rf /app/src/app
RUN rm -rf /app/src/components
RUN rm -rf /app/public

USER nextjs

CMD ["node", "src/queue/worker-new.js"]
