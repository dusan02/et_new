version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: earnings-postgres
    environment:
      POSTGRES_DB: earnings_table
      POSTGRES_USER: earnings_user
      POSTGRES_PASSWORD: earnings_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U earnings_user -d earnings_table" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: earnings-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: earnings-app
    ports:
      - "3000:3000"
      - "3001:3001"
      - "3002:3002"
    environment:
      - DATABASE_URL=postgresql://earnings_user:earnings_password@postgres:5432/earnings_table
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
    command: >
      sh -c "
        npm run db:generate &&
        npm run db:push &&
        npm run build &&
        npm start
      "

volumes:
  postgres_data:
  redis_data:


