#!/bin/bash

# üöÄ F√°za 1: Pr√≠prava Debian Servera pre Earnings Table
# Spusti na: root@89.185.250.213

set -e

echo "üîß === F√ÅZA 1: PR√çPRAVA SERVERA ==="

# Farby pre v√Ωstup
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARN] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

# Kontrola, ƒçi sme na Debian syst√©me
if ! grep -q "debian" /etc/os-release; then
    error "Tento script je navrhnut√Ω pre Debian syst√©m!"
fi

log "Aktualiz√°cia syst√©mu..."
apt update && apt upgrade -y

log "In≈°tal√°cia z√°kladn√Ωch n√°strojov..."
apt install -y curl wget gnupg2 software-properties-common apt-transport-https \
    ca-certificates lsb-release git vim htop tree unzip build-essential

# Node.js 20.x in≈°tal√°cia
log "In≈°tal√°cia Node.js 20.x..."
curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
apt install -y nodejs

# Overenie Node.js verzie
NODE_VERSION=$(node --version)
log "Node.js verzia: $NODE_VERSION"

# PostgreSQL 15 in≈°tal√°cia
log "In≈°tal√°cia PostgreSQL 15..."
apt install -y postgresql postgresql-contrib postgresql-client

# Redis in≈°tal√°cia
log "In≈°tal√°cia Redis..."
apt install -y redis-server

# nginx in≈°tal√°cia
log "In≈°tal√°cia nginx..."
apt install -y nginx

# PM2 in≈°tal√°cia glob√°lne
log "In≈°tal√°cia PM2..."
npm install -g pm2

# ufw firewall konfigur√°cia
log "Konfigur√°cia firewall..."
ufw --force enable
ufw allow OpenSSH
ufw allow 80
ufw allow 443
ufw allow 3000
ufw allow 9000  # Pre webhook

# Vytvorenie prieƒçinkov pre aplik√°ciu
log "Vytvorenie aplikaƒçn√Ωch prieƒçinkov..."
mkdir -p /var/www/earnings-table
mkdir -p /var/log/earnings-table
mkdir -p /etc/earnings-table

# Nastavenie spr√°vnych vlastn√≠ctiev
chown -R www-data:www-data /var/www/earnings-table
chown -R www-data:www-data /var/log/earnings-table

# Spustenie slu≈æieb
log "Spustenie slu≈æieb..."
systemctl enable postgresql
systemctl enable redis-server
systemctl enable nginx
systemctl start postgresql
systemctl start redis-server
systemctl start nginx

# Kontrola stavu slu≈æieb
log "Kontrola stavu slu≈æieb..."
systemctl is-active --quiet postgresql && log "‚úÖ PostgreSQL: RUNNING" || warn "‚ùå PostgreSQL: STOPPED"
systemctl is-active --quiet redis-server && log "‚úÖ Redis: RUNNING" || warn "‚ùå Redis: STOPPED"
systemctl is-active --quiet nginx && log "‚úÖ nginx: RUNNING" || warn "‚ùå nginx: STOPPED"

log "üéâ F√ÅZA 1 DOKONƒåEN√Å! Server je pripraven√Ω."
log "ƒéalej spusti: ./02-setup-database.sh"
