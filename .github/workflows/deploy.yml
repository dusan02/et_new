name: Deploy to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 35

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          timeout: 300s
          command_timeout: 30m
          script: |
            cd /var/www/earnings-table
            echo "üöÄ Starting deployment..."

            # Force reset to match remote exactly
            echo "üßπ Force resetting to remote state..."
            git fetch origin main
            git reset --hard origin/main
            git clean -fd

            # Install dependencies with cache
            echo "üì¶ Installing dependencies..."
            npm ci --production=false

            # Build the application with timeout protection
            echo "üèóÔ∏è Building application..."
            timeout 600 npm run build || {
                echo "‚ö†Ô∏è Build timed out, trying again..."
                npm run build
            }

            # Start the application (let npm start handle existing processes)
            echo "‚ñ∂Ô∏è Starting application..."
            nohup npm start > /var/log/earnings-table.log 2>&1 &
            echo "Application started in background"

            # Quick health check
            echo "üè• Health check..."
            sleep 5
            if curl -f http://localhost:3000 > /dev/null 2>&1; then
                echo "‚úÖ Deployment successful!"
            else
                echo "‚ö†Ô∏è Health check inconclusive - check logs manually"
            fi

            echo "üéâ Deployment completed!"

      - name: Health check (SSL disabled)
        run: |
          sleep 30
          echo "Checking HTTP connection..."
          curl -f http://${{ secrets.HOST }} || echo "HTTP check failed"
          echo "Checking HTTPS connection (SSL verification disabled)..."
          curl -k -f https://${{ secrets.HOST }} || echo "HTTPS check failed - SSL certificate issue"
          echo "Health check completed (SSL verification disabled)"
