name: Deploy to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          timeout: 120s
          command_timeout: 20m
          script: |
            cd /var/www/earnings-table
            echo "üöÄ Starting deployment..."
            
            # Clean up any untracked files that might conflict
            echo "üßπ Cleaning untracked files..."
            git clean -fd
            
            # Stash any local changes
            echo "üíæ Stashing local changes..."
            git stash
            
            # Pull latest changes
            echo "üì• Pulling latest changes..."
            git pull origin main
            
            # Install dependencies with cache
            echo "üì¶ Installing dependencies..."
            npm ci --production=false
            
            # Build the application
            echo "üèóÔ∏è Building application..."
            npm run build
            
            # Stop any running Next.js processes gracefully
            echo "üõë Stopping existing processes..."
            if pgrep -f "node.*next" > /dev/null; then
                echo "Found running Next.js processes, stopping..."
                pkill -TERM -f "node.*next" || true
                sleep 3
                # Force kill if still running
                pkill -KILL -f "node.*next" || true
                sleep 2
            else
                echo "No running Next.js processes found"
            fi
            
            # Start the application in background
            echo "‚ñ∂Ô∏è Starting application..."
            nohup npm start > /var/log/earnings-table.log 2>&1 &
            APP_PID=$!
            echo "Application started with PID: $APP_PID"
            
            # Wait for application to start with timeout
            echo "‚è≥ Waiting for application to start..."
            for i in {1..20}; do
                if curl -f http://localhost:3000 > /dev/null 2>&1; then
                    echo "‚úÖ Application started successfully!"
                    break
                fi
                if [ $i -eq 20 ]; then
                    echo "‚ùå Application failed to start within 20 seconds"
                    echo "üìã Check logs: tail -20 /var/log/earnings-table.log"
                    exit 1
                fi
                sleep 1
            done
            
            echo "‚úÖ Deployment completed successfully!"

      - name: Health check
        run: |
          sleep 30
          curl -f https://${{ secrets.HOST }} || exit 1
