generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/// Základná tabuľka s dnešnými earnings (kalendár)
model EarningsTickersToday {
  reportDate      DateTime
  ticker          String
  reportTime      String?
  epsActual       Float?
  epsEstimate     Float?
  revenueActual   BigInt?
  revenueEstimate BigInt?
  sector          String?
  companyType     String?
  dataSource      String?
  sourcePriority  Int?
  fiscalPeriod    String?
  fiscalYear      Int?
  primaryExchange String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@id([reportDate, ticker])
  @@index([reportDate])
  @@index([reportDate, ticker])
  @@index([ticker])
  @@index([fiscalPeriod, fiscalYear])
  @@index([epsActual])
  @@index([revenueActual])
  @@index([reportDate, ticker, fiscalPeriod, fiscalYear])
  @@index([ticker, fiscalPeriod, fiscalYear])
  @@index([reportTime])
  @@index([sector])
  @@index([dataSource])
}

/// Daily reset state tracking
model DailyResetState {
  date        DateTime @id
  state       String   // INIT | RESET_DONE | FETCH_DONE
  resetAt     DateTime @default(now())
  fetchAt     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([date])
  @@index([state])
}

/// Cron job execution audit
model CronRun {
  id          String    @id @default(cuid())
  name        String
  status      String    // RUNNING | OK | ERROR | SKIPPED
  startedAt   DateTime  @default(now())
  finishedAt  DateTime?
  message     String?
  meta        String?   // JSON string for additional data
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([name, startedAt])
  @@index([status])
  @@index([startedAt])
}

/// Pohyb/market data v deň reportu
model TodayEarningsMovements {
  ticker                String
  reportDate            DateTime
  companyName           String
  currentPrice          Float?
  previousClose         Float?
  marketCap             BigInt?
  size                  String?
  marketCapDiff         Float?
  marketCapDiffBillions Float?
  priceChangePercent    Float?
  sharesOutstanding     BigInt?
  updatedAt             DateTime? @default(now())
  companyType           String?
  primaryExchange       String?
  reportTime            String?

  @@id([ticker, reportDate])
  @@index([reportDate])
  @@index([reportDate, ticker])
  @@index([ticker])
  @@index([size])
  @@index([priceChangePercent])
  @@index([marketCap])
  @@index([reportDate, size])
  @@index([ticker, size])
  @@index([marketCapDiff])
  @@index([companyType])
}

/// Guidance od Benzinga/Polygon Benzinga
model BenzingaGuidance {
  id                         Int       @id @default(autoincrement())
  ticker                     String
  estimatedEpsGuidance       Float?
  estimatedRevenueGuidance   BigInt?
  epsGuideVsConsensusPct     Float?
  revenueGuideVsConsensusPct Float?
  previousMinEpsGuidance     Float?
  previousMaxEpsGuidance     Float?
  previousMinRevenueGuidance BigInt?
  previousMaxRevenueGuidance BigInt?
  fiscalPeriod               String?
  fiscalYear                 Int?
  releaseType                String?
  lastUpdated                DateTime? @default(now())
  createdAt                  DateTime  @default(now())
  notes                      String?

  @@unique([ticker, fiscalPeriod, fiscalYear])
  @@index([ticker])
  @@index([ticker, fiscalPeriod, fiscalYear])
  @@index([fiscalPeriod, fiscalYear])
  @@index([lastUpdated])
  @@index([releaseType])
}

/// Log odmietnutých záznamov guidance (na debug)
model GuidanceImportFailures {
  id        Int      @id @default(autoincrement())
  ticker    String
  reason    String
  payload   String
  createdAt DateTime @default(now())
}
