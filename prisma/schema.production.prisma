generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========= EarningsTickersToday =========
model EarningsTickersToday {
  id           Int       @id @default(autoincrement())
  ticker       String
  companyName  String?   @map("company_name")
  reportDate   DateTime  @db.Date @map("for_date")
  reportTime   String?   @map("report_time")
  epsEst       Decimal?  @db.Decimal(12, 2) @map("eps_est")
  epsRep       Decimal?  @db.Decimal(12, 2) @map("eps_rep")
  revEst       BigInt?   @map("rev_est")
  revRep       BigInt?   @map("rev_rep")
  logoUrl      String?   @map("logo_url")
  updatedAt    DateTime  @default(now()) @map("updated_at")

  @@unique([ticker, reportDate])
  @@index([ticker])
  @@map("EarningsTickersToday")
}

// ========= TodayEarningsMovements =========
model TodayEarningsMovements {
  id              Int       @id @default(autoincrement())
  ticker          String
  reportDate      DateTime  @db.Date @map("for_date")
  prePct          Decimal?  @db.Decimal(8, 2)  @map("pre_pct")
  regPct          Decimal?  @db.Decimal(8, 2)  @map("reg_pct")
  postPct         Decimal?  @db.Decimal(8, 2)  @map("post_pct")
  marketCapDiff   BigInt?   @map("market_cap_diff")
  priceClosePrev  Decimal?  @db.Decimal(14, 4) @map("price_close_prev")
  priceOpen       Decimal?  @db.Decimal(14, 4) @map("price_open")
  priceCurrent    Decimal?  @db.Decimal(14, 4) @map("price_current")
  updatedAt       DateTime  @default(now())    @map("updated_at")

  @@unique([ticker, reportDate])
  @@index([ticker])
  @@map("TodayEarningsMovements")
}

// ========= Earnings (historick√©) =========
model Earnings {
  id            Int       @id @default(autoincrement())
  ticker        String
  fiscalDate    DateTime  @db.Date @map("fiscal_date")
  fiscalQuarter String?   @map("fiscal_quarter")
  epsEst        Decimal?  @db.Decimal(12, 2) @map("eps_est")
  epsAct        Decimal?  @db.Decimal(12, 2) @map("eps_act")
  revEst        BigInt?   @map("rev_est")
  revAct        BigInt?   @map("rev_act")
  guideEpsLo    Decimal?  @db.Decimal(12, 2) @map("guide_eps_lo")
  guideEpsHi    Decimal?  @db.Decimal(12, 2) @map("guide_eps_hi")
  createdAt     DateTime  @default(now())

  @@unique([ticker, fiscalDate])
  @@index([ticker, fiscalDate])
  @@map("Earnings")
}

// ========= MarketData =========
model MarketData {
  id                 BigInt    @id @default(autoincrement())
  ticker             String
  ts                 DateTime
  price              Decimal?  @db.Decimal(14, 4)
  sharesOutstanding  BigInt?   @map("shares_outstanding")
  marketCap          BigInt?   @map("market_cap")
  source             String?
  createdAt          DateTime  @default(now())

  @@index([ticker, ts])
  @@map("MarketData")
}
